;; bridge_address: MsgAdrr, oracles_address: MsgAddr, oracles: Dict, state_flags: uint8, burn_bridge_fee: Coins
;; Returns bridge address
slice set_test_bridge_conf() impure inline_ref {

   int addr        = random();
   slice oc_addr   = begin_cell().store_uint(random(), 256).end_cell().begin_parse();
   cell oracle_tbl = udict_set(new_dict(), 256, random(), oc_addr);
   cell new_conf   = begin_cell().store_uint(addr, 256)
                                 .store_uint(random(), 256) ;; Oracles addr
                                 .store_dict(oracle_tbl)
                                 .store_uint(0, 8)
                                 .store_grams(100000000) ;; 0.1 fee
                                 .end_cell();
   cell config   = get_config();

   config~idict_set_ref(32, 79, new_conf);
   set_global_config(config);

   return generate_internal_address_with_custom_data(0, -1, addr);
}
